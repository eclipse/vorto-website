<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eclipse Vorto</title>
    <link>https://www.eclipse.org/vorto/</link>
    <description>Recent content on Eclipse Vorto</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 May 2018 21:07:13 +0100</lastBuildDate>
    
	<atom:link href="https://www.eclipse.org/vorto/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What is Vorto?</title>
      <link>https://www.eclipse.org/vorto/introduction/</link>
      <pubDate>Mon, 28 May 2018 21:07:13 +0100</pubDate>
      
      <guid>https://www.eclipse.org/vorto/introduction/</guid>
      <description>Interaction among different stakeholders via Vorto
 Vorto provides an Eclipse Toolset that allows Device Manufacturers to easily describe device functionality and characteristics as Information Models. These models are managed in a Vorto Repository. Platform Providers provide Code generators that convert these models into device - specific &amp;ldquo;stubs&amp;rdquo; that run on the device and send Information Model compliant messages to the platform-specific IoT Backend. In order to process these messages in the IoT backend, Vorto offers a set of convenient technical components, for example parsers and validators.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://www.eclipse.org/vorto/gettingstarted/</link>
      <pubDate>Wed, 09 May 2018 10:58:37 +0800</pubDate>
      
      <guid>https://www.eclipse.org/vorto/gettingstarted/</guid>
      <description>To get started with Vorto easily, we are going to show you how you can use the Vorto IoT Tool to describe a simple device that measures distance and integrate it with Eclipse Hono.
Prerequisites  Maven Java 8 Eclipse for DSL Developers Eclipse Vorto Toolset Plugins  Creating a Vorto Project  Open Eclipse and switch to the Vorto Perspective. In the Vorto Model Project Browser, click the + button.</description>
    </item>
    
    <item>
      <title>Connecting an ESP8266 to Eclipse Hono</title>
      <link>https://www.eclipse.org/vorto/tutorials/arduino/</link>
      <pubDate>Wed, 09 Mar 2016 20:08:11 +0100</pubDate>
      
      <guid>https://www.eclipse.org/vorto/tutorials/arduino/</guid>
      <description>&lt;p&gt;This tutorial explains how to generate an Arduino sketch for a given Information Model and send the device data to Eclipse Hono via MQTT.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Connecting a GrovePi to Eclipse Hono</title>
      <link>https://www.eclipse.org/vorto/tutorials/grovepi/</link>
      <pubDate>Fri, 09 Mar 2018 20:08:11 +0100</pubDate>
      
      <guid>https://www.eclipse.org/vorto/tutorials/grovepi/</guid>
      <description>&lt;p&gt;This tutorial explains how to generate a simple Python application for you GrovePi that sends sensor data to Eclipse Hono using MQTT.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mapping device payload to standardized Vorto Function Blocks</title>
      <link>https://www.eclipse.org/vorto/tutorials/payloadmapping/</link>
      <pubDate>Wed, 09 Mar 2016 20:08:11 +0100</pubDate>
      
      <guid>https://www.eclipse.org/vorto/tutorials/payloadmapping/</guid>
      <description>&lt;p&gt;IoT Devices may not always send their data to the cloud in the structure and protocol that is required by the IoT platform that the devices are integrating with, e.g. AWS IoT, Azure IoT or Eclipse IoT. Eclipse Vorto provides the tools and libraries for you to achieve that.&lt;/p&gt;

&lt;p&gt;In this tutorial you are going to learn, how you create a Vorto Mapping Specification that maps a AWS IoT Button JSON payload to standardized &lt;a href=&#34;https://github.com/IPSO-Alliance/pub&#34;&gt;IPSO&lt;/a&gt; Vorto Function Blocks and execute the mapping specification with the Vorto Mapping Engine. You will integrate the AWS IoT Button payload with the Eclipse Ditto Digital Twin service but also learn how to extend the Vorto Mapping Engine to map to other IoT platforms.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Downloads</title>
      <link>https://www.eclipse.org/vorto/downloads/</link>
      <pubDate>Wed, 09 May 2018 10:58:37 +0800</pubDate>
      
      <guid>https://www.eclipse.org/vorto/downloads/</guid>
      <description>Installing the Vorto Toolset This section lists the steps required to install the Vorto Toolset.
Install the Eclipse Vorto Toolset in one of the following ways:
 Installing from the Eclipse Marketplace
 Installing from the Vorto Toolset Update Site
  Installing from the Eclipse Marketplace. Proceed as follows
 Start Eclipse. In the main menu, click Help &amp;gt; Eclipse Marketplace&amp;hellip;.
The Eclipse Marketplace dialog opens. In the Find entry field enter Vorto and click the Go button.</description>
    </item>
    
    <item>
      <title>Community</title>
      <link>https://www.eclipse.org/vorto/community/</link>
      <pubDate>Wed, 09 May 2018 10:58:37 +0800</pubDate>
      
      <guid>https://www.eclipse.org/vorto/community/</guid>
      <description>Mailing List A great way to stay up to date with Vorto activity is to subscribe to the Mailing list provided by Eclipse. Sign up for the mailing list here.
Discussion Forum A general discussion forum can be found here.
Issue Tracker Issues and bugs related to Vorto are tracked with the Github Issue tracking system. If you find any issues, please report them here.
Vorto Wiki Access Vorto wiki here.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>https://www.eclipse.org/vorto/release-notes/</link>
      <pubDate>Wed, 09 Mar 2016 20:10:46 +0100</pubDate>
      
      <guid>https://www.eclipse.org/vorto/release-notes/</guid>
      <description>0.10.0 milestone 3 Fixes and Enhancements
 EU-GDPR Compliance of Vorto Repository, i.e. Export of user-specific Vorto models. Eclipse Hono Generator, supporting the generation of Arduino-, Python- and Java source code. Code Generator Configuration UI. Code Generators that are executed from the Eclipse Vorto Toolset do now provide a configuration UI that allows developers to customize the execution of the generator.  API Changes
 Vorto Code Generators must now implement org.</description>
    </item>
    
    <item>
      <title>Payload Mapping</title>
      <link>https://www.eclipse.org/vorto/documentation/mappingengine/</link>
      <pubDate>Wed, 09 Mar 2016 20:08:11 +0100</pubDate>
      
      <guid>https://www.eclipse.org/vorto/documentation/mappingengine/</guid>
      <description>&lt;p&gt;The payload mapping feature in Eclipse Vorto can be used to transform arbitrary payload to standardized Vorto messages and vice versa.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vorto Meta Model</title>
      <link>https://www.eclipse.org/vorto/documentation/metamodel_uml/</link>
      <pubDate>Wed, 09 Mar 2016 20:08:11 +0100</pubDate>
      
      <guid>https://www.eclipse.org/vorto/documentation/metamodel_uml/</guid>
      <description>&lt;p&gt;This image describes the Vorto Meta Model.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Information Model DSL</title>
      <link>https://www.eclipse.org/vorto/documentation/infomodel_dsl/</link>
      <pubDate>Wed, 09 Mar 2016 20:08:11 +0100</pubDate>
      
      <guid>https://www.eclipse.org/vorto/documentation/infomodel_dsl/</guid>
      <description>&lt;p&gt;This section describes the DSL grammer for a Vorto Information Model.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Function Block DSL</title>
      <link>https://www.eclipse.org/vorto/documentation/function_block_dsl/</link>
      <pubDate>Wed, 09 Mar 2016 20:08:11 +0100</pubDate>
      
      <guid>https://www.eclipse.org/vorto/documentation/function_block_dsl/</guid>
      <description>&lt;p&gt;This section describes the DSL grammer for a Vorto Function Block.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Datatype DSL</title>
      <link>https://www.eclipse.org/vorto/documentation/datatype_dsl/</link>
      <pubDate>Wed, 09 Mar 2016 20:08:11 +0100</pubDate>
      
      <guid>https://www.eclipse.org/vorto/documentation/datatype_dsl/</guid>
      <description>&lt;p&gt;This section describes the DSL grammer for a Vorto Datatype&amp;hellip;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mapping DSL</title>
      <link>https://www.eclipse.org/vorto/documentation/mappings_dsl/</link>
      <pubDate>Wed, 09 Mar 2016 20:08:11 +0100</pubDate>
      
      <guid>https://www.eclipse.org/vorto/documentation/mappings_dsl/</guid>
      <description>&lt;p&gt;This section describes the DSL grammer for a Vorto Mapping.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installation Python and GrovePi required modules</title>
      <link>https://www.eclipse.org/vorto/installation/grovepi/</link>
      <pubDate>Mon, 28 May 2018 20:08:11 +0100</pubDate>
      
      <guid>https://www.eclipse.org/vorto/installation/grovepi/</guid>
      <description> Download and install the latest version of Python 3.x from the official Python website
 Install pip
 Install Visual C++ Build Tools(http://landinghub.visualstudio.com/visual-cpp-build-tools). This is a pre-requisite for installing netifaces.
 Install the required Python modules
 Eclipse paho netinterfaces
 open terminal or console and type the following command
pip install paho-mqtt pip install netifaces     </description>
    </item>
    
  </channel>
</rss>